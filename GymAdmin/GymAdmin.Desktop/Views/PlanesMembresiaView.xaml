<UserControl x:Class="GymAdmin.Desktop.Views.PlanesMembresiaView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:fa="http://schemas.awesome.incremented/wpf/xaml/fontawesome.sharp"
             xmlns:viewmodels="clr-namespace:GymAdmin.Desktop.ViewModels.Membresias"
             Background="Transparent">

    <Grid Margin="10">
        <Grid IsEnabled="{Binding IsDialogOpen, Converter={StaticResource InverseBoolConverter}}">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>

            <Border Grid.Row="0" Background="{StaticResource PrimaryBrush}"
                    Padding="15" CornerRadius="6" Margin="0 0 0 10">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>

                    <fa:IconImage Icon="Search"
                                  Foreground="{StaticResource TextInvertedBrush}"
                                  VerticalAlignment="Center"
                                  Width="18" Height="18"
                                  Margin="0 0 10 0"/>

                    <Grid Grid.Column="1" VerticalAlignment="Center">
                        <TextBox x:Name="SearchTextBox"
                                 Tag="Buscar por nombre…"
                                 Text="{Binding Filtro, UpdateSourceTrigger=PropertyChanged}"
                                 Style="{StaticResource SearchTextBoxStyle}"
                                 MinWidth="240"/>
                    </Grid>

                    <Button Grid.Column="2"
                            Style="{StaticResource ClearSearchButtonStyle}"
                            Command="{Binding LimpiarFiltroCommand}"
                            VerticalAlignment="Center"
                            HorizontalAlignment="Center"
                            Visibility="{Binding Text, ElementName=SearchTextBox,
                                                Converter={StaticResource EmptyStringToVisibilityConverter},
                                                UpdateSourceTrigger=PropertyChanged}">
                        <fa:IconImage Icon="Times" Width="14" Height="14"
                          Foreground="{StaticResource TextInvertedBrush}"/>
                    </Button>

                    <ComboBox Grid.Column="3"
                              ItemsSource="{Binding Estados}"
                              SelectedItem="{Binding EstadoSeleccionado, UpdateSourceTrigger=PropertyChanged}"
                              Style="{StaticResource FilterComboBoxStyle}"
                              Margin="15 0 0 0"
                              Width="150"/>

                    <Button Grid.Column="4" Margin="12,0,0,0" MinWidth="140" Height="36"
                            Content="Nuevo plan"
                            Command="{Binding NuevoPlanCommand}"
                            Style="{StaticResource PrimaryButtonStyle}"/>
                </Grid>
            </Border>

            <!-- Contador -->
            <TextBlock Grid.Row="1" Margin="0 0 0 10"
                       Text="{Binding TotalCount, StringFormat='Planes encontrados: {0}'}"
                       Foreground="{StaticResource TextSecondaryBrush}"
                       FontSize="13" FontWeight="SemiBold"/>

            <!-- DataGrid -->
            <DataGrid Grid.Row="2"
                      ItemsSource="{Binding Planes}"
                      SelectedItem="{Binding PlanSeleccionado}"
                      AutoGenerateColumns="False"
                      IsReadOnly="True"
                      CanUserAddRows="False"
                      Style="{StaticResource BaseDataGridStyle}">
                <DataGrid.Resources>
                    <!-- Centrar celdas por defecto -->
                    <Style TargetType="TextBlock" BasedOn="{StaticResource {x:Type TextBlock}}">
                        <Setter Property="VerticalAlignment" Value="Center"/>
                        <Setter Property="HorizontalAlignment" Value="Center"/>
                        <Setter Property="TextAlignment" Value="Center"/>
                        <Setter Property="Padding" Value="8 6"/>
                    </Style>
                </DataGrid.Resources>

                <DataGrid.Columns>
                    <DataGridTextColumn Header="NOMBRE" Binding="{Binding Nombre}" Width="2*" SortMemberPath="Nombre">
                        <DataGridTextColumn.ElementStyle>
                            <Style TargetType="TextBlock" BasedOn="{StaticResource {x:Type TextBlock}}">
                                <Setter Property="HorizontalAlignment" Value="Left"/>
                                <Setter Property="TextAlignment" Value="Left"/>
                            </Style>
                        </DataGridTextColumn.ElementStyle>
                    </DataGridTextColumn>

                    <DataGridTextColumn Header="CRÉDITOS" Binding="{Binding Creditos}" Width="*" SortMemberPath="Creditos"/>
                    <DataGridTextColumn Header="DÍAS VIGENCIA" Binding="{Binding DiasValidez}" Width="*" SortMemberPath="DuracionDias"/>
                    <DataGridTextColumn Header="PRECIO" Binding="{Binding Precio, StringFormat={}{0:C}}" Width="*" SortMemberPath="PrecioSugerido"/>


                    <DataGridTextColumn Header="ESTADO" Binding="{Binding Estado}" 
                    Width="Auto" MinWidth="120">
                        <DataGridTextColumn.ElementStyle>
                            <Style TargetType="TextBlock" BasedOn="{StaticResource {x:Type TextBlock}}">
                                <Setter Property="Foreground" Value="{Binding Estado, Converter={StaticResource StatusToColorConverter}}"/>
                                <Setter Property="FontWeight" Value="SemiBold"/>
                                <Setter Property="HorizontalAlignment" Value="Center"/>
                                <Setter Property="VerticalAlignment" Value="Center"/>
                            </Style>
                        </DataGridTextColumn.ElementStyle>
                    </DataGridTextColumn>

                    <!-- Acciones -->
                    <DataGridTemplateColumn Header="ACCIONES" Width="220">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                                    <Button Style="{StaticResource DataGridActionButtonStyle}"
                                            Command="{Binding DataContext.EditarPlanCommand, RelativeSource={RelativeSource AncestorType=DataGrid}}"
                                            CommandParameter="{Binding}" ToolTip="Editar Plan">
                                        <fa:IconImage Icon="Edit" Width="16" Height="16" Foreground="{StaticResource BackgroundPrimaryDarkBrush}"/>
                                    </Button>
                                    <Button Style="{StaticResource DataGridActionButtonStyle}"
                                            Command="{Binding DataContext.ClonarPlanCommand, RelativeSource={RelativeSource AncestorType=DataGrid}}"
                                            CommandParameter="{Binding}"
                                            ToolTip="Clonar">
                                        <fa:IconImage Icon="Copy" Width="16" Height="16" Foreground="{StaticResource BackgroundPrimaryDarkBrush}"/>
                                    </Button>
                                    <ToggleButton Style="{StaticResource ToggleSwitchStyle}"
                                                  IsChecked="{Binding IsActive, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                  ToolTip="{Binding IsActive, Converter={StaticResource BoolToActivoInactivoConverter}}"
                                                  Command="{Binding DataContext.TogglePlanCommand, RelativeSource={RelativeSource AncestorType=DataGrid}}"
                                                  IsEnabled="{Binding DataContext.IsBusy, RelativeSource={RelativeSource AncestorType=DataGrid}, Converter={StaticResource InverseBoolConverter}}"
                                                  CommandParameter="{Binding}"/>
                                    <Button Style="{StaticResource DataGridActionButtonStyle}"
                                            Command="{Binding DataContext.EliminarPlanCommand, RelativeSource={RelativeSource AncestorType=DataGrid}}"
                                            CommandParameter="{Binding}"
                                            ToolTip="Eliminar Plan">
                                        <fa:IconImage Icon="TrashAlt" Width="16" Height="16" Foreground="{StaticResource ErrorBrush}"/>
                                    </Button>
                                </StackPanel>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                </DataGrid.Columns>
            </DataGrid>

            <!-- Footer / Paginación -->
            <Border Grid.Row="3" Background="{StaticResource BackgroundLightBrush}" Padding="10" CornerRadius="4" Margin="0 10 0 0">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>

                    <!-- Info -->
                    <TextBlock VerticalAlignment="Center" Foreground="{StaticResource TextSecondaryBrush}">
                        <Run Text="Mostrando "/>
                        <Run Text="{Binding DisplayFrom, Mode=OneWay}"/>
                        <Run Text=" – "/>
                        <Run Text="{Binding DisplayTo, Mode=OneWay}"/>
                        <Run Text=" de "/>
                        <Run Text="{Binding TotalCount, Mode=OneWay}"/>
                    </TextBlock>

                    <!-- Controles -->
                    <StackPanel Grid.Column="1" Orientation="Horizontal" HorizontalAlignment="Right">
                        <ComboBox Width="90"
                                  ItemsSource="{Binding PageSizes, Mode=OneWay}"
                                  SelectedItem="{Binding PageSize}"
                                  ToolTip="Elementos por página"
                                  
                                  Style="{StaticResource FilterComboBoxStyle}"
                                  Height="32" Margin="0,0,8,0"/>

                        <Button Content="⏮" Command="{Binding GoFirstPageCommand}" Width="36" Height="32"/>
                        <Button Content="◀"  Command="{Binding GoPrevPageCommand}"  Width="36" Height="32" Margin="4,0,8,0"/>

                        <TextBlock VerticalAlignment="Center" Margin="6,0">
                            <Run Text="Pág. "/>
                            <Run Text="{Binding PageNumber, Mode=OneWay}"/>
                            <Run Text=" / "/>
                            <Run Text="{Binding TotalPages, Mode=OneWay}"/>
                        </TextBlock>

                        <Button Content="▶"  Command="{Binding GoNextPageCommand}"  Width="36" Height="32" Margin="8,0,4,0"/>
                        <Button Content="⏭" Command="{Binding GoLastPageCommand}"  Width="36" Height="32"/>
                    </StackPanel>
                </Grid>
            </Border>
        </Grid>

        <!-- Overlay de diálogo -->
        <Grid x:Name="DialogOverlay"
              Visibility="{Binding IsDialogOpen, Converter={StaticResource BoolToVisibilityConverter}}"
              Background="#80000000"
              Panel.ZIndex="1000"
              HorizontalAlignment="Stretch"
              VerticalAlignment="Stretch">
            <ContentControl Content="{Binding DialogContent}"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"/>
        </Grid>
    </Grid>
</UserControl>